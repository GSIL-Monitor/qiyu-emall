<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 数据源配置-->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<property name="driverClass" value="${qiyu_emall.jdbc.driver}" />
		<property name="jdbcUrl" value="${qiyu_emall.jdbc.url}" />
		<property name="user" value="${qiyu_emall.jdbc.username}" />
		<property name="password" value="${qiyu_emall.jdbc.password}" />
		<property name="initialPoolSize" value="10" />
		<property name="acquireIncrement" value="1" />
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="10" />
		<property name="maxIdleTime" value="1800" />
	</bean>


     <!--sqlSessionFactory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:com/qiyu/manager/emall/mapper/*Mapper.xml</value>
			</list>
		</property>
		<property name="plugins">
			<list>
				<ref bean="mybatisPaginatorInterceptor" />
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.qiyu.lightning.mall.service.mapper" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>


	<!-- mybatis 分页 -->
	<bean name="mybatisPaginatorInterceptor"
		  class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
		<property name="dialectClass"
				  value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></property>
	</bean>

	<!-- aop事物配置 -->
	<tx:annotation-driven proxy-target-class="true"/>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..bizz.*Bizz.*(..)) or execution(* *..service.*.*(..))" order="100"/>
	</aop:config>
	
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="batch*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="insert*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="remove*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="del*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Throwable"/>
			<tx:method name="*" propagation="SUPPORTS" read-only="true" rollback-for="Throwable"/>
		</tx:attributes>
	</tx:advice>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
		
</beans>
